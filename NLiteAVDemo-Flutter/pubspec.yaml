name: netease_callkit_ui
description: "netease callkit_ui is a ui kit about audio&video calls launched by CommsEase."
version: 3.7.1+1
homepage: https://yunxin.163.com/
#publish_to: none

environment:
  sdk: ">=2.17.0 <4.0.0"
  flutter: ">=1.20.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  yunxin_alog: ^2.0.0
  hawk_meta: ^0.0.1
  file: ^6.1.4
  intl: any
  path_provider: ^2.0.12
  plugin_platform_interface: ^2.0.2
  shared_preferences: ^2.2.0
  crypto: ^3.0.1
  netease_common: ^1.0.9
  netease_common_ui: ^10.3.0
  nim_core_v2: ^10.5.0
  fluttertoast: ^8.2.12
  netease_callkit: 3.7.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^1.0.0
  intl_utils: ^2.8.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  generate: true
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.netease.yunxin.flutter.plugins.callkit.ui
        pluginClass: CallKitUIPlugin
      ios:
        pluginClass: CallKitUIPlugin

  # To add assets to your plugin package, add an assets section, like this:
  assets:
    - assets/audios/
    - assets/images/
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages
